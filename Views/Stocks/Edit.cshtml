@model POS.Models.Stock

@{
    ViewData["Title"] = "Edit";
}

<h1>Editar</h1>

@{
    var categoriasString = Html.DisplayFor(Model =>Model.Producto.Categoria.Descripcion).ToString();
}

<h4>Stock de Producto: @Html.DisplayFor(model => model.Producto.Nombre) @Html.DisplayFor(model => model.Producto.PesoNeto) 
    @FuncionesProductosViews.DevolverPesoSegunCategoria(categoriasString)
</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="StockId" />

            <div class="form-group">            
                <input type="hidden" asp-for="ProductoId" class="form-control"/>
                <span asp-validation-for="ProductoId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="hidden" asp-for="CodigoBarra" class="form-control" />
                <span asp-validation-for="CodigoBarra" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Cantidad" class="control-label"></label>
                <input type="number" asp-for="Cantidad" class="form-control" />
                <span asp-validation-for="Cantidad" class="text-danger"></span>
            </div>
            
            <br/>
            <div class="form-group">
                <input type="submit" value="Guardar" class="btn btn-primary" />
                <a class="btn btn-outline-primary" style="text-decoration:none" asp-action="Index">Volver Atras</a>
            </div>
        </form>
    </div>
</div>


<script>
      document.querySelectorAll("input[type='number']").forEach(function(input) {
        input.addEventListener("focus", function(){
            this.select();
        })
    });
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

     
}
